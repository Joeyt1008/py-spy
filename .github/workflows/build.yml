name: Build

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    tags:
      - v*
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  
  armv64_job:
      name: Build and Test for arm64
      strategy:
        matrix:
          pyver: [cp37-cp37m]
      runs-on: ubuntu-18.04
      env:
        py: /opt/python/${{ matrix.pyver }}/bin/python
        img: quay.io/pypa/manylinux2014_aarch64  
    
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
      
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              ${{ env.img }} \
              bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
              source .env/bin/activate && \
              yum install -y epel-release && \
              yum-config-manager --enable epel && \
              yum install -y curl cargo && \
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -v -y --default-toolchain none && \
              export PATH=$HOME/.cargo/bin:${PATH} && \
              rustup --version && \
              python -m pip install --upgrade pip && \
              python --version && \
              uname -m && \
              whoami && \
              pwd && \
              ls && \
              cargo build --verbose && \
              cargo test && \
              deactivate'
  
  
  
  
  
  

  build-linux-x86:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: sudo apt install libunwind-dev
      if: runner.os == 'Linux'
    - name: Build
      run: cargo build --release --verbose --examples
    - name: Test
      id: test
      continue-on-error: true
      run: cargo test --release
    - name: Test (retry#1)
      id: test1
      run: cargo test --release
      if: steps.test.outcome=='failure'
      continue-on-error: true
    - name: Test (retry#2)
      run: cargo test --release
      if: steps.test1.outcome=='failure'
